services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: archive_master_api
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DB_HOST=archive_master_db
      - DB_PORT=3306
      - DB_USERNAME=archivemaster
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=archive_master
      - REDIS_HOST=archive_master_redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
    ports:
      - '127.0.0.1:3000:3000'
    volumes:
      - ./storage/uploads:/usr/src/app/storage/uploads
      - ./logs:/usr/src/app/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - archive_master_network
    healthcheck:
      test: ['CMD', 'wget', '--no-verbose', '--tries=1', '--spider', 'http://localhost:3000/api/health']
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  db:
    image: mysql:8.0
    container_name: archive_master_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: YAXcB61Kcx16A7FBn34k
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: archivemaster
      MYSQL_PASSWORD: YAXcB61Kcx16A7FBn34k
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/conf:/etc/mysql/conf.d
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    ports:
      - '3307:3306'
    command: --bind-address=0.0.0.0
    networks:
      - archive_master_network
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: redis:7-alpine
    container_name: archive_master_redis
    command: ['redis-server', '--requirepass', '${REDIS_PASSWORD}']
    volumes:
      - redis_data:/data
    ports:
      - '127.0.0.1:6380:6379'
    networks:
      - archive_master_network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  archive_master_network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
